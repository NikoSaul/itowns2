/**
 * Generated On: 2015-10-5
 * Class: Scene
 * Description: La Scene est l'instance principale du client. Elle est le chef orchestre de l'application.
 */

/**
 *
 * @param {type} c3DEngine
 * @param {type} Globe
 * @param {type} ManagerCommands
 * @param {type} BrowseTree
 * @returns {Function}
 */
import c3DEngine from 'Renderer/c3DEngine';
import Globe from 'Globe/Globe';
import ManagerCommands from 'Core/Commander/ManagerCommands';
import BrowseTree from 'Scene/BrowseTree';
import NodeProcess from 'Scene/NodeProcess';
import Quadtree from 'Scene/Quadtree';
import CoordStars from 'Core/Geographic/CoordStars';
import GeoCoordinate,{UNIT} from 'Core/Geographic/GeoCoordinate';
import defaultValue from 'Core/defaultValue';
import Layer from 'Scene/Layer';
import Capabilities from 'Core/System/Capabilities';
import MobileMappingLayer from 'MobileMapping/MobileMappingLayer';
import CustomEvent from 'custom-event';
import * as THREE from 'THREE';
import volcanoFS from 'Renderer/Shader/VolcanoFS.glsl';
import volcanoVS from 'Renderer/Shader/VolcanoVS.glsl';
import particleFS from 'Renderer/Shader/ParticleFS.glsl';
import particleVS from 'Renderer/Shader/ParticleVS.glsl';

var instanceScene = null;
var event = new CustomEvent('globe-built');
var NO_SUBDIVISE = 0;
var SUBDIVISE = 1;
var CLEAN = 2;

function Scene(coordinate, ellipsoid, viewerDiv, debugMode, gLDebug) {

    if (instanceScene !== null) {
        throw new Error("Cannot instantiate more than one Scene");
    }

    this.ellipsoid = ellipsoid;

    var positionCamera = this.ellipsoid.cartographicToCartesian(coordinate);

    this.layers = [];
    this.map = null;

    this.cameras = null;
    this.selectNodes = null;
    this.managerCommand = ManagerCommands(this);
    this.orbitOn = false;

    this.gLDebug = gLDebug;
    this.gfxEngine = c3DEngine(this,positionCamera,viewerDiv, debugMode,gLDebug);
    this.browserScene = new BrowseTree(this.gfxEngine);
    this.cap = new Capabilities();

    this.time = 0;
    this.orbitOn = false;
    this.rAF = null;
    this.elevationEffect = false;
    this.heightMapEffect = false;
    this.sunEffect = false;
    this.fogEffect = false;
    this.fireOn = false;
    this.diffractionOn = false;
    this.hideSea = false;
    this.slideOn = false;
    this.volcanoMesh = null;
    this.particles = null;
    this.traceOn = false;
    this.trace = null;

    this.viewerDiv = viewerDiv;
}

Scene.prototype.constructor = Scene;
/**
 */
Scene.prototype.updateCommand = function() {
    //TODO: Implement Me

};

/**
 * @documentation: return current camera
 * @returns {Scene_L7.Scene.gfxEngine.camera}
 */
Scene.prototype.currentCamera = function() {
    return this.gfxEngine.camera;
};

Scene.prototype.currentControls = function() {
    return this.gfxEngine.controls;
};

Scene.prototype.getPickPosition = function(mouse) {
    return this.gfxEngine.getPickingPositionFromDepth(mouse);
};

Scene.prototype.getEllipsoid = function() {
    return this.ellipsoid;
};

//    Scene.prototype.getZoomLevel = function(){
//        return this.selectNodes;
//    };

Scene.prototype.size = function() {
    return this.ellipsoid.size;
};

/**
 *
 * @returns {undefined}
 */
Scene.prototype.quadTreeRequest = function(quadtree, process) {

    this.browserScene.browse(quadtree, this.currentCamera(), process, this.map.layersConfiguration, SUBDIVISE);
    this.managerCommand.runAllCommands().then(function() {
        if (this.managerCommand.isFree()) {
            this.browserScene.browse(quadtree, this.currentCamera(), process, this.map.layersConfiguration, SUBDIVISE);
            if (this.managerCommand.isFree()) {
                this.browserScene.browse(quadtree, this.currentCamera(), process, this.map.layersConfiguration, CLEAN)
                this.viewerDiv.dispatchEvent(event);

            }
        }

    }.bind(this));

    this.renderScene3D();

};

Scene.prototype.realtimeSceneProcess = function() {

    for (var l = 0; l < this.layers.length; l++) {
        var layer = this.layers[l].node;
        var process = this.layers[l].process;

        for (var sl = 0; sl < layer.children.length; sl++) {
            var sLayer = layer.children[sl];

            if (sLayer instanceof Quadtree)
                this.browserScene.browse(sLayer, this.currentCamera(), process, this.map.layersConfiguration, NO_SUBDIVISE);
            else if (sLayer instanceof MobileMappingLayer)
                this.browserScene.updateMobileMappingLayer(sLayer, this.currentCamera());
            else if (sLayer instanceof Layer)
                this.browserScene.updateLayer(sLayer, this.currentCamera());

        }
    }
};

/**
 *
 * @returns {undefined}
 */
Scene.prototype.updateScene3D = function() {

    this.gfxEngine.update();
};

Scene.prototype.wait = function(timeWait) {

    var waitTime = timeWait ? timeWait : 20;

    this.realtimeSceneProcess();

    window.clearInterval(this.timer);

    this.timer = window.setTimeout(this.quadTreeRequest.bind(this), waitTime, this.layers[0].node.tiles, this.layers[0].process);
};

/**
 */
Scene.prototype.renderScene3D = function() {

    this.gfxEngine.renderScene();

};

Scene.prototype.scene3D = function() {

    return this.gfxEngine.scene3D;
};

/**
 * @documentation: Ajoute des Layers dans la scène.
 *
 * @param node {[object Object]}
 */
Scene.prototype.add = function(node, nodeProcess) {

    if (node instanceof Globe) {
        this.map = node;
        nodeProcess = nodeProcess || new NodeProcess(this.currentCamera(), node.ellipsoid);
        //this.quadTreeRequest(node.tiles, nodeProcess);

    }

    this.layers.push({
        node: node,
        process: nodeProcess
    });
    this.gfxEngine.add3DScene(node.getMesh());
};

Scene.prototype.getMap = function() {
    return this.map;
};

/**
 * @documentation: Retire des layers de la scène
 *
 * @param layer {[object Object]}
 */
Scene.prototype.remove = function( /*layer*/ ) {
    //TODO: Implement Me

};


/**
 * @param layers {[object Object]}
 */
Scene.prototype.select = function( /*layers*/ ) {
    //TODO: Implement Me

};

Scene.prototype.selectNodeId = function(id) {

    this.browserScene.selectedNodeId = id;

};

Scene.prototype.setStreetLevelImageryOn = function(value) {

    if (value) {
        if (this.layers[1]) {

            this.layers[1].node.visible = true;
            this.layers[1].node.children[0].visible = true;

        } else {

            var mobileMappingLayer = new MobileMappingLayer();
            mobileMappingLayer.initiatePanoramic();

            var immersive = new Layer();
            immersive.add(mobileMappingLayer);
            this.add(immersive);
        }
    } else {
        this.layers[1].node.visible = false;
        this.layers[1].node.children[0].visible = false; // mobileMappingLayer
    }

    this.updateScene3D();
};

Scene.prototype.setLightingPos = function(pos) {

    if (pos)
        this.lightingPos = pos;
    else {
        var coSun = CoordStars.getSunPositionInScene(this.getEllipsoid(), new Date().getTime(), 48.85, 2.35);
        this.lightingPos = coSun;
    }

    defaultValue.lightingPos = this.lightingPos;

    this.browserScene.updateMaterialUniform("lightPosition", this.lightingPos.clone().normalize());
    this.layers[0].node.updateLightingPos(this.lightingPos);
};

// Should be moved in time module: A single loop update registered object every n millisec
Scene.prototype.animateTime = function(value) {

    if (value) {
        this.time += 4000;

        if (this.time) {

            var nMilliSeconds = this.time;
            var coSun = CoordStars.getSunPositionInScene(this.getEllipsoid(), new Date().getTime() + 3.6 * nMilliSeconds, 0, 0);
            this.lightingPos = coSun;
            this.browserScene.updateMaterialUniform("lightPosition", this.lightingPos.clone().normalize());
          
            
            // TEMP georoom ****************************************************
            this.browserScene.updateMaterialUniform("time", this.time /1000);
            var posCartCenterIsland = new THREE.Vector3(3370247.4958533593, -2284640.7292576847, -4912345.35489408);
            var i = this.time /400000;
            var dist = 20000;
            var x = Math.cos(i) * dist;
            var y = Math.sin(i) * dist;
            var z = 0;
            // Then apply rotation using posCartCenterIsland normal
            var newPos = posCartCenterIsland.clone().add(new THREE.Vector3(x,y,z));
            this.browserScene.updateMaterialUniform("sunPosition", newPos);
    
            if (this.volcanoMesh != null)
                  this.volcanoMesh.material.uniforms[ 'time' ].value = .00000020 * this.time;//.00025 * ( Date.now() - start );)
              

	    if(this.particles != null){
                this.particles.material.uniforms[ 'time' ].value =  this.time / 4000;
            }
            // *****************************************************************
            
            this.layers[0].node.updateLightingPos(this.lightingPos);
            if (this.orbitOn) { // ISS orbit is 0.0667 degree per second -> every 60th of sec: 0.00111;
                var p = this.gfxEngine.camera.camera3D.position;
                var r = Math.sqrt(p.z * p.z + p.x * p.x);
                var alpha = Math.atan2(p.z, p.x) + 0.0001;
                p.x = r * Math.cos(alpha);
                p.z = r * Math.sin(alpha);
            }

            this.gfxEngine.update();
            // this.gfxEngine.renderScene();
        }
        this.rAF = requestAnimationFrame(this.animateTime.bind(this));

    } else
        window.cancelAnimationFrame(this.rAF);
};


Scene.prototype.getElevationEffect = function(){
    
    return this.elevationEffect;
};

Scene.prototype.setElevationEffect = function(b){
    
    if(b === null )
        this.elevationEffect = !this.elevationEffect;
    else 
        this.elevationEffect = b;

    this.browserScene.updateMaterialUniform("elevationEffectOn", this.elevationEffect ? 1. : 0.);
    this.renderScene3D();
};

Scene.prototype.setHeightMapEffect = function(b){
    
    if(b === null )
        this.heightMapEffect = !this.heightMapEffect;
    else 
        this.heightMapEffect = b;

    this.browserScene.updateMaterialUniform("heightMapEffectOn", this.heightMapEffect ? 1. : 0.);
    this.renderScene3D();
};


Scene.prototype.setHideSeaOn = function(b){
    
    if(b === null )
        this.hideSea = !this.hideSea;
    else 
        this.hideSea = b;

    this.browserScene.updateMaterialUniform("hideSea", this.hideSea ? 1. : 0.);
    this.renderScene3D();
};


Scene.prototype.setFogEffect = function(b){
    
    if(b === null )
        this.fogEffect = !this.fogEffect;
    else 
        this.fogEffect = b;

    this.browserScene.updateMaterialUniform("fogEffectOn", this.fogEffect ? 1. : 0.);
    this.renderScene3D();
    
};

Scene.prototype.setFireOn = function(b){
    
    if(b === null )
        this.fireOn = !this.fireOn;
    else 
        this.fireOn = b;

    this.browserScene.updateMaterialUniform("fireOn", this.fireOn ? 1. : 0.);
    this.renderScene3D();
};

Scene.prototype.setDiffractionOn = function(b){
    
    if(b === null )
        this.diffractionOn = !this.diffractionOn;
    else 
        this.diffractionOn = b;

    this.browserScene.updateMaterialUniform("diffractionOn", this.diffractionOn ? 1. : 0.);
    this.renderScene3D();
};

Scene.prototype.setTraceOn = function(){
    
    this.traceOn = !this.traceOn;
    
    if( this.traceOn && this.trace === null){
        var trace = "55.455101,-20.897264,59 55.454498,-20.898588,78 55.453918,-20.899111,94 55.453876,-20.898949,95 55.453651,-20.899321,102 55.453598,-20.898769,106 55.453213,-20.899401,112 55.453072,-20.900171,118 55.452721,-20.900772,126 55.452473,-20.900091,143 55.451775,-20.899801,160 55.452385,-20.900291,142 55.451603,-20.900211,175 55.451923,-20.900673,171 55.451527,-20.900854,196 55.451065,-20.902258,224 55.450294,-20.902086,231 55.449467,-20.903210,256 55.449341,-20.903660,261 55.449512,-20.904913,279 55.449436,-20.905415,280 55.448608,-20.906567,325 55.448826,-20.906637,316 55.448418,-20.907059,338 55.448898,-20.907219,329 55.448383,-20.907509,350 55.448021,-20.908361,371 55.447506,-20.908993,397 55.447205,-20.908682,394 55.447235,-20.909021,403 55.447109,-20.908962,403 55.445992,-20.911318,458 55.444244,-20.912710,496 55.444328,-20.913191,493 55.443695,-20.914244,539 55.443920,-20.914604,540 55.443642,-20.914515,545 55.442429,-20.918022,656 55.443073,-20.918734,658 55.442825,-20.919214,685 55.443363,-20.919004,660 55.443459,-20.919254,669 55.443577,-20.918995,651 55.444778,-20.918343,601 55.442890,-20.920267,705 55.441227,-20.921518,745 55.440166,-20.922100,759 55.438988,-20.922522,789 55.438492,-20.922470,792 55.438515,-20.922260,790 55.437881,-20.921949,803 55.437538,-20.922161,807 55.437065,-20.921970,812 55.436638,-20.922091,813 55.436195,-20.921909,813 55.435703,-20.921829,813 55.435028,-20.922140,816 55.435219,-20.922663,817 55.434715,-20.923023,823 55.434856,-20.923655,826 55.434525,-20.924225,830 55.433727,-20.924425,840 55.433697,-20.925488,838 55.433544,-20.925919,838 55.433556,-20.926701,832 55.433224,-20.927021,837 55.433613,-20.927702,841 55.433495,-20.928043,845 55.433525,-20.928875,857 55.433773,-20.929346,862 55.433578,-20.930227,887 55.434040,-20.931391,914 55.434467,-20.931471,915 55.433987,-20.931641,924 55.433933,-20.932241,942 55.434242,-20.932293,942 55.434128,-20.932583,949 55.433826,-20.932632,950 55.434029,-20.932823,955 55.434513,-20.932774,955 55.434029,-20.933165,959 55.433525,-20.933294,964 55.433773,-20.934175,975 55.433437,-20.934425,978 55.433128,-20.935259,987 55.433205,-20.935598,990 55.432869,-20.936701,1010 55.432560,-20.937132,1013 55.432903,-20.937553,1021 55.433064,-20.938334,1033 55.433010,-20.938986,1039 55.432022,-20.938284,1027 55.431484,-20.938696,1038 55.431122,-20.938625,1040 55.431026,-20.939177,1057 55.430584,-20.939026,1052 55.430294,-20.939116,1059 55.430092,-20.938786,1053 55.429737,-20.938845,1051 55.429489,-20.939236,1051 55.429607,-20.939478,1057 55.429844,-20.939688,1059 55.429855,-20.940098,1059 55.430317,-20.940268,1070 55.430702,-20.940550,1075 55.431099,-20.940578,1076 55.431797,-20.941099,1072 55.432076,-20.942242,1084 55.431259,-20.942282,1078 55.431282,-20.942774,1092 55.431087,-20.943233,1109 55.431454,-20.943295,1110 55.431324,-20.943695,1117 55.431335,-20.944437,1127 55.430992,-20.945269,1134 55.431152,-20.945700,1135 55.431831,-20.946280,1146 55.433064,-20.947674,1172 55.432838,-20.948065,1169 55.434631,-20.948645,1175 55.435200,-20.948605,1175 55.435875,-20.949827,1171 55.436455,-20.951380,1187 55.436550,-20.951912,1197 55.438248,-20.955109,1228 55.438160,-20.956520,1261 55.438278,-20.957651,1274 55.439972,-20.959766,1336 55.440197,-20.960388,1339 55.439995,-20.962341,1373 55.440155,-20.962011,1364 55.440533,-20.962212,1375 55.440434,-20.963013,1405 55.439663,-20.963663,1419 55.439953,-20.964415,1439 55.439663,-20.965378,1447 55.440155,-20.965307,1447 55.440067,-20.967522,1474 55.440540,-20.968243,1482 55.440166,-20.969995,1522 55.440125,-20.970337,1529 55.441055,-20.972078,1550 55.443085,-20.974163,1616 55.443623,-20.977419,1676 55.446133,-20.980494,1736 55.446163,-20.982327,1767 55.446648,-20.983290,1784 55.446743,-20.984671,1805 55.447117,-20.985262,1818 55.444263,-20.985422,1811 55.443943,-20.985582,1809 55.443512,-20.986525,1828 55.443340,-20.986725,1822 55.444138,-20.986876,1833 55.444305,-20.987547,1835 55.444080,-20.988688,1844 55.442612,-20.989450,1826 55.442535,-20.990511,1834 55.442291,-20.990723,1824 55.441132,-20.990702,1810 55.440971,-20.990332,1802 55.441174,-20.990131,1799 55.441025,-20.989630,1796 55.440788,-20.989479,1789 55.440521,-20.988958,1782 55.439735,-20.988258,1764 55.437183,-20.987738,1724 55.436733,-20.987535,1719 55.432388,-20.987686,1693 55.431553,-20.987396,1689 55.430595,-20.987585,1681 55.427280,-20.986294,1631 55.425316,-20.986614,1597 55.424351,-20.986374,1588 55.419395,-20.983019,1530 55.417645,-20.982887,1499 55.416382,-20.983118,1508 55.415016,-20.982767,1512 55.412594,-20.982538,1475 55.411842,-20.982918,1466 55.408966,-20.983009,1476 55.408226,-20.983309,1473 55.407722,-20.983059,1474 55.406521,-20.983049,1457 55.406059,-20.983349,1452 55.405113,-20.983318,1450 55.403687,-20.982908,1433 55.401276,-20.984652,1370 55.398247,-20.986494,1282 55.395611,-20.987366,1238 55.393616,-20.987757,1239 55.389267,-20.990541,1256 55.387218,-20.990061,1189 55.386478,-20.989220,1138 55.387543,-20.988438,1127 55.386017,-20.988708,1121 55.385674,-20.988047,1104 55.385246,-20.987757,1097 55.385536,-20.987356,1091 55.386425,-20.987547,1103 55.386436,-20.987226,1101 55.386112,-20.986435,1082 55.386864,-20.985884,1079 55.387424,-20.985945,1082 55.387478,-20.985674,1076 55.386833,-20.985262,1065 55.386318,-20.984600,1058 55.386070,-20.985422,1065 55.385708,-20.985443,1063 55.385258,-20.984522,1051 55.384697,-20.984192,1041 55.383991,-20.984232,1031 55.384193,-20.984941,1043 55.383938,-20.985712,1038 55.383797,-20.986645,1050 55.383022,-20.987015,1029 55.382156,-20.986734,1018 55.381607,-20.986334,1010 55.379581,-20.985643,988 55.379707,-20.985203,986 55.378742,-20.984812,969 55.378197,-20.983999,954 55.377541,-20.983450,941 55.378220,-20.983189,941 55.377628,-20.982548,933 55.377357,-20.982689,933 55.377060,-20.982649,931 55.377102,-20.982449,931 55.376232,-20.981947,921 55.375824,-20.982338,921 55.373981,-20.981655,900 55.373474,-20.982628,878 55.374485,-20.983019,874 55.375931,-20.985413,849 55.376297,-20.985764,901 55.375782,-20.986355,843 55.375740,-20.986734,837 55.375870,-20.986925,820 55.375751,-20.987217,806 55.376148,-20.988157,779 55.375824,-20.988117,755 55.375900,-20.988688,708 55.375462,-20.988749,683 55.375481,-20.989149,634 55.376286,-20.989929,676 55.377369,-20.990452,745 55.377338,-20.992785,715 55.377670,-20.992935,712 55.378475,-20.993977,718 55.378445,-20.994328,718 55.380329,-20.994097,774 55.381458,-20.994608,799 55.381489,-20.994860,799 55.382240,-20.995150,712 55.383282,-20.995029,615 55.383820,-20.994728,593 55.385223,-20.996721,393 55.387058,-20.997362,377 55.387604,-20.998234,317 55.389053,-20.998665,316 55.389278,-20.999565,279 55.389545,-20.999727,275 55.389591,-21.000969,265 55.390118,-21.001188,259 55.389503,-21.002090,245 55.389751,-21.004084,259 55.390759,-21.004614,258 55.392918,-21.004725,265 55.393700,-21.004345,273 55.395435,-21.006046,265 55.396465,-21.008039,281 55.398193,-21.008480,287 55.399170,-21.009031,289 55.400146,-21.010904,308 55.400471,-21.011185,317 55.400307,-21.012146,365 55.400234,-21.012728,384 55.400543,-21.013517,416 55.401424,-21.013067,386 55.401917,-21.014019,390 55.403786,-21.015381,414 55.403946,-21.015793,387 55.404579,-21.015871,437 55.404900,-21.017996,446 55.404930,-21.018677,439 55.407238,-21.020147,475 55.408043,-21.020889,504 55.408031,-21.022020,511 55.408031,-21.022032,511 55.408527,-21.021622,535 55.409019,-21.022572,552 55.409321,-21.022612,570 55.409866,-21.021801,610 55.410221,-21.022741,586 55.411221,-21.022423,663 55.411575,-21.023514,644 55.414150,-21.025366,706 55.414513,-21.025347,726 55.415424,-21.025757,739 55.416157,-21.025557,788 55.416508,-21.025738,768 55.416542,-21.025467,807 55.417862,-21.025606,849 55.418259,-21.025406,891 55.418804,-21.025726,901 55.419296,-21.025366,934 55.419739,-21.026117,927 55.421047,-21.025005,918 55.421593,-21.024143,918 55.421497,-21.021521,936 55.422207,-21.019518,930 55.423546,-21.020138,916 55.424740,-21.019669,907 55.424877,-21.019758,904 55.424747,-21.021080,879 55.424587,-21.021469,873 55.424599,-21.021940,873 55.424706,-21.022202,870 55.423634,-21.022272,893 55.423931,-21.023012,868 55.424522,-21.023172,853 55.424297,-21.022842,868 55.425102,-21.022741,849 55.425167,-21.023502,817 55.425606,-21.023542,808 55.425735,-21.024103,781 55.426144,-21.024385,768 55.427967,-21.023613,780 55.428459,-21.023994,795 55.428452,-21.027109,839 55.428879,-21.027658,856 55.429222,-21.028481,868 55.429363,-21.028881,876 55.429245,-21.029112,864 55.429523,-21.029020,876 55.430222,-21.029531,896 55.430405,-21.029873,890 55.429050,-21.030123,865 55.429039,-21.030493,871 55.428345,-21.031034,863 55.428032,-21.032507,882 55.428795,-21.033016,899 55.428612,-21.033337,892 55.429577,-21.033619,911 55.429352,-21.034359,901 55.429405,-21.034889,897 55.428589,-21.035259,879 55.427925,-21.035250,863 55.427647,-21.035089,853 55.427090,-21.036011,843 55.427139,-21.036282,851 55.426853,-21.036352,849 55.427078,-21.036793,858 55.426422,-21.036522,849 55.425896,-21.036121,848 55.428505,-21.038864,906 55.428394,-21.039606,914 55.427322,-21.039526,890 55.426575,-21.040028,894 55.425789,-21.040928,885 55.425060,-21.040487,865 55.424213,-21.041470,827 55.424137,-21.042080,830 55.424202,-21.042900,843 55.424847,-21.043461,853 55.424889,-21.044111,851 55.424877,-21.044622,887 55.424652,-21.044453,872 55.423752,-21.044792,912 55.423225,-21.044392,920 55.422119,-21.044613,948 55.419598,-21.042179,890 55.419052,-21.040838,865 55.418880,-21.040928,878 55.418579,-21.040577,882 55.418667,-21.040447,882 55.418644,-21.040287,873 55.418461,-21.040108,875 55.418171,-21.039326,864 55.418053,-21.039467,864 55.417347,-21.039356,871 55.416573,-21.038824,832 55.416122,-21.038586,828 55.415157,-21.038343,817 55.414021,-21.038424,799 55.412079,-21.038084,740 55.411015,-21.038975,695 55.410553,-21.038473,678 55.409813,-21.038383,667 55.409119,-21.038836,656 55.408279,-21.038414,643 55.406681,-21.038675,578 55.406178,-21.038195,574 55.406078,-21.038734,561 55.405769,-21.038614,551 55.404900,-21.039015,527 55.404373,-21.040007,547 55.404823,-21.040749,555 55.405254,-21.041088,577 55.405231,-21.041378,574 55.405437,-21.041679,589 55.404964,-21.041960,557 55.405041,-21.042109,556 55.405331,-21.042280,574 55.405083,-21.042780,560 55.404869,-21.042961,564 55.405029,-21.043661,574 55.404911,-21.044212,584 55.405170,-21.044613,613 55.404835,-21.044693,578 55.404835,-21.045033,583 55.404633,-21.045193,588 55.404881,-21.045294,603 55.405018,-21.045923,610 55.404823,-21.046595,609 55.405106,-21.047066,627 55.404716,-21.047016,614 55.404537,-21.047136,608 55.403744,-21.048428,604 55.404289,-21.049599,624 55.404881,-21.050171,648 55.404835,-21.050440,607 55.405491,-21.050781,655 55.405308,-21.051201,626 55.405350,-21.051561,618 55.405781,-21.051702,661 55.405567,-21.052673,609 55.405567,-21.053274,587 55.405727,-21.054066,561 55.406254,-21.054756,554 55.406178,-21.055468,560 55.406029,-21.055798,564 55.405685,-21.056149,579 55.405663,-21.056438,582 55.406036,-21.056938,572 55.406593,-21.057009,567 55.407078,-21.056889,568 55.406982,-21.056248,581 55.407379,-21.056007,598 55.407604,-21.055998,598 55.408108,-21.056238,606 55.408215,-21.056038,608 55.410156,-21.056519,638 55.410694,-21.056837,645 55.410458,-21.057669,641 55.411423,-21.058540,698 55.413311,-21.058990,916 55.413517,-21.060032,911 55.414150,-21.060122,932 55.414749,-21.060503,894 55.414963,-21.061905,857 55.415844,-21.062555,861 55.416401,-21.062414,854 55.416336,-21.062866,853 55.416744,-21.063627,837 55.417141,-21.064346,776 55.416939,-21.064459,776 55.417088,-21.065538,783 55.416969,-21.065689,781 55.417004,-21.065889,786 55.416809,-21.066500,801 55.416412,-21.066681,846 55.416412,-21.066879,851 55.416607,-21.066952,831 55.416466,-21.067081,851 55.416401,-21.067331,851 55.416294,-21.067202,851 55.416111,-21.067381,868 55.414856,-21.067421,960 55.414631,-21.067772,945 55.414276,-21.068043,987 55.413689,-21.068302,1036 55.413624,-21.068151,1054 55.413464,-21.068293,1058 55.412968,-21.068333,1071 55.412903,-21.068502,1074 55.412186,-21.068352,1109 55.411671,-21.068321,1131 55.411530,-21.068472,1131 55.410576,-21.068333,1141 55.409954,-21.067951,1157 55.409912,-21.068071,1157 55.409428,-21.067772,1162 55.409149,-21.067341,1157 55.408966,-21.067772,1148 55.408138,-21.067963,1138 55.407391,-21.067532,1106 55.406586,-21.067762,1116 55.406414,-21.067461,1104 55.405853,-21.067600,1102 55.405319,-21.068092,1112 55.404793,-21.068142,1102 55.404408,-21.068361,1103 55.404259,-21.068241,1097 55.403828,-21.068361,1091 55.403549,-21.068632,1094 55.403336,-21.068623,1086 55.403160,-21.068974,1094 55.402916,-21.068993,1085 55.401703,-21.069975,1127 55.400986,-21.070105,1120 55.400696,-21.069963,1119 55.400501,-21.070133,1120 55.400223,-21.070093,1121 55.400330,-21.070225,1136 55.399944,-21.070284,1134 55.400009,-21.070524,1150 55.399944,-21.070705,1169 55.400158,-21.070925,1172 55.400253,-21.071125,1188 55.399998,-21.071104,1187 55.400105,-21.071236,1187 55.399826,-21.071356,1200 55.400070,-21.071587,1211 55.399803,-21.071686,1213 55.400082,-21.071917,1219 55.400158,-21.072367,1232 55.399845,-21.073368,1250 55.399784,-21.074179,1261 55.399342,-21.074369,1269 55.398796,-21.075411,1287 55.398979,-21.075891,1302 55.398926,-21.076191,1310 55.399040,-21.076382,1314 55.399223,-21.076401,1314 55.399151,-21.076481,1314 55.399258,-21.076603,1318 55.399170,-21.077412,1334 55.398956,-21.077744,1342 55.398968,-21.078003,1349 55.398701,-21.078314,1357 55.398430,-21.078474,1360 55.398388,-21.078693,1360 55.398483,-21.078745,1358 55.398300,-21.079575,1355 55.398571,-21.080557,1328 55.398872,-21.080847,1319 55.399193,-21.080887,1312 55.399330,-21.081186,1298 55.399170,-21.081186,1304 55.399097,-21.081377,1294 55.399170,-21.081608,1288 55.399063,-21.081806,1289 55.399429,-21.082058,1278 55.399109,-21.082397,1307 55.399181,-21.082708,1323 55.399300,-21.082758,1323 55.399246,-21.082968,1337 55.400009,-21.083429,1299 55.400234,-21.083710,1305 55.400093,-21.084061,1327 55.401051,-21.085390,1251 55.401295,-21.086052,1264 55.401649,-21.086452,1271 55.401703,-21.086662,1279 55.401886,-21.086761,1278 55.401756,-21.086843,1290 55.401852,-21.087143,1297 55.402069,-21.087044,1285 55.402058,-21.087433,1310 55.402187,-21.087572,1307 55.402229,-21.087984,1340 55.402927,-21.088305,1331 55.403076,-21.088385,1331 55.403259,-21.088333,1325 55.404160,-21.088385,1295 55.404621,-21.088554,1275 55.404728,-21.088795,1286 55.405052,-21.088896,1274 55.405094,-21.088804,1274 55.405289,-21.088804,1266 55.405254,-21.088594,1255 55.405384,-21.088514,1255 55.405491,-21.087885,1241 55.405716,-21.087313,1222 55.406433,-21.086191,1174 55.406658,-21.086052,1173 55.407860,-21.086681,1176 55.408604,-21.087393,1181 55.408924,-21.087944,1188 55.408943,-21.088194,1188 55.409286,-21.088743,1199 55.409149,-21.089266,1222 55.409321,-21.089525,1225 55.409569,-21.089556,1225 55.409824,-21.089806,1229 55.409782,-21.089935,1243 55.409664,-21.090027,1243 55.409771,-21.090157,1260 55.409996,-21.090216,1250 55.410137,-21.090067,1236 55.410275,-21.090046,1231 55.410255,-21.089846,1222 55.410606,-21.089355,1217 55.410831,-21.089445,1221 55.411297,-21.090176,1228 55.411629,-21.090345,1227 55.412067,-21.089996,1228 55.413311,-21.089836,1256 55.415855,-21.092278,1261 55.419235,-21.095572,1295 55.420059,-21.095652,1316 55.420715,-21.096111,1315 55.420982,-21.096151,1316 55.421131,-21.095951,1322 55.421284,-21.095873,1322 55.421284,-21.096003,1316 55.421425,-21.095963,1322 55.421627,-21.096083,1315 55.422226,-21.095510,1326 55.422485,-21.095491,1324 55.422562,-21.095341,1333 55.423149,-21.095371,1330 55.423183,-21.095261,1330 55.423397,-21.095291,1329 55.423580,-21.095411,1327 55.424824,-21.095261,1319 55.425652,-21.094952,1329 55.426315,-21.094400,1343 55.426670,-21.094490,1349 55.426731,-21.094650,1355 55.426617,-21.094940,1360 55.426723,-21.094952,1360 55.426926,-21.095390,1374 55.426907,-21.095491,1377 55.427044,-21.095621,1377 55.427540,-21.095201,1388 55.428215,-21.095261,1400 55.428493,-21.095390,1403 55.428814,-21.095781,1413 55.428944,-21.096361,1430 55.429062,-21.096512,1440 55.429085,-21.096903,1472 55.429523,-21.097294,1492 55.429340,-21.097855,1503 55.429092,-21.097984,1503 55.429394,-21.098324,1512 55.429588,-21.098965,1526 55.430168,-21.099146,1542 55.430809,-21.099504,1558 55.430969,-21.100077,1563 55.430897,-21.100527,1573 55.431004,-21.101036,1578 55.431625,-21.101868,1590 55.431477,-21.103279,1613 55.431099,-21.103729,1613 55.431648,-21.104710,1626 55.432354,-21.105412,1632 55.432430,-21.106852,1672 55.432236,-21.107182,1679 55.432613,-21.108253,1735 55.433266,-21.108725,1748 55.433105,-21.109976,1851 55.432751,-21.109884,1860 55.432526,-21.110195,1889 55.431625,-21.110405,1902 55.431507,-21.112658,2113 55.431862,-21.113317,2126 55.438953,-21.114340,1900 55.440006,-21.113798,1849 55.441002,-21.113749,1764 55.440819,-21.112276,1789 55.440918,-21.111998,1789 55.442440,-21.112207,1724 55.443157,-21.111897,1724 55.445057,-21.113697,1689 55.445671,-21.113928,1677 55.446648,-21.113838,1638 55.447151,-21.113419,1612 55.447269,-21.112917,1613 55.447117,-21.112556,1612 55.447483,-21.112787,1597 55.447666,-21.112377,1585 55.448063,-21.112606,1576 55.448330,-21.113007,1568 55.448803,-21.113258,1557 55.449673,-21.114017,1537 55.449757,-21.114300,1531 55.450390,-21.114489,1516 55.449680,-21.114719,1501 55.449596,-21.114969,1480 55.450325,-21.116119,1357 55.450497,-21.116091,1340 55.450626,-21.116421,1312 55.449951,-21.116861,1298 55.450230,-21.117691,1238 55.449856,-21.118073,1249 55.449833,-21.118742,1215 55.449951,-21.118862,1187 55.449295,-21.119493,1194 55.448460,-21.119864,1211 55.448532,-21.120234,1197 55.449039,-21.120394,1176 55.449455,-21.121504,1148 55.449821,-21.121956,1130 55.449673,-21.122034,1130 55.449738,-21.122465,1137 55.450111,-21.122915,1123 55.450359,-21.123337,1106 55.450207,-21.123716,1107 55.450005,-21.123886,1130 55.449810,-21.124006,1152 55.449982,-21.124147,1132 55.449970,-21.124678,1134 55.449703,-21.125008,1148 55.450100,-21.125479,1139 55.450413,-21.125519,1132 55.450443,-21.125957,1135 55.450691,-21.125957,1135 55.450710,-21.126247,1135 55.451118,-21.126709,1134 55.450863,-21.126949,1150 55.450874,-21.127138,1151 55.450668,-21.127489,1165 55.450886,-21.127588,1149 55.450947,-21.127798,1146 55.451260,-21.127689,1116 55.451805,-21.127859,1100 55.452087,-21.128050,1057 55.452374,-21.128019,1033 55.452568,-21.128719,1034 55.453053,-21.128759,999 55.453213,-21.129009,981 55.453514,-21.129271,964 55.454918,-21.128889,919 55.454716,-21.128719,922 55.456097,-21.128401,959 55.457214,-21.128269,996 55.457298,-21.128490,989 55.457001,-21.128710,980 55.457008,-21.129320,973 55.457676,-21.129591,985 55.458843,-21.129320,1012 55.459801,-21.129690,1014 55.460423,-21.129690,1030 55.461014,-21.129742,1042 55.461185,-21.129980,1028 55.462151,-21.129721,1061 55.462460,-21.130100,1053 55.462612,-21.129810,1066 55.462460,-21.129501,1082 55.462837,-21.129412,1086 55.463661,-21.129742,1100 55.463631,-21.129971,1090 55.464745,-21.130180,1106 55.466312,-21.129601,1148 55.466515,-21.129671,1148 55.466366,-21.130072,1131 55.466354,-21.130310,1113 55.466732,-21.130442,1102 55.467449,-21.130350,1137 55.468243,-21.130402,1142 55.469090,-21.130201,1141 55.469616,-21.130251,1140 55.470314,-21.129721,1160 55.470787,-21.129702,1165 55.470959,-21.129745,1165 55.471077,-21.129650,1172 55.471195,-21.130020,1169 55.471355,-21.129770,1181 55.471409,-21.129896,1179 55.471249,-21.130127,1169 55.471504,-21.129902,1179 55.471596,-21.129711,1192 55.471676,-21.129696,1192 55.471554,-21.130016,1190 55.471901,-21.129616,1202 55.471779,-21.130047,1190 55.471783,-21.130041,1190 55.472214,-21.129641,1212 55.472122,-21.129456,1217 55.471947,-21.129356,1207 55.472240,-21.129255,1223 55.472504,-21.129421,1224 55.472595,-21.129641,1220 55.472637,-21.129406,1224 55.472481,-21.129261,1230 55.472469,-21.128990,1239 55.471951,-21.129021,1225 55.472530,-21.128845,1239 55.472729,-21.128929,1242 55.472797,-21.129251,1235 55.473125,-21.129597,1230 55.473454,-21.129606,1234 55.474220,-21.129086,1257 55.473511,-21.128374,1268 55.472019,-21.127985,1263 55.472744,-21.127153,1299 55.473553,-21.126904,1305 55.473469,-21.126509,1325 55.472137,-21.126528,1328 55.472649,-21.126114,1349 55.472046,-21.126303,1342 55.472397,-21.125599,1380 55.473072,-21.124842,1404 55.473091,-21.124022,1435 55.473747,-21.123615,1448 55.473778,-21.123266,1461 55.473972,-21.123486,1451 55.473930,-21.122866,1474 55.474251,-21.123226,1466 55.474754,-21.123116,1486 55.475197,-21.123066,1492 55.476547,-21.123417,1486 55.477654,-21.124537,1453 55.478992,-21.125286,1434 55.479969,-21.124678,1435 55.479992,-21.124058,1433 55.480808,-21.124098,1407 55.481525,-21.124847,1389 55.482212,-21.124878,1357 55.481720,-21.124456,1369 55.481430,-21.123177,1385 55.482235,-21.123466,1378 55.483444,-21.123547,1385 55.483822,-21.123285,1395 55.485107,-21.123507,1385 55.486267,-21.123377,1390 55.487740,-21.123917,1397 55.488552,-21.124626,1385 55.489967,-21.124817,1392 55.490482,-21.125628,1387 55.491570,-21.126577,1380 55.492512,-21.126869,1387 55.492943,-21.127279,1395 55.493832,-21.129070,1383 55.495644,-21.131092,1385 55.497223,-21.129560,1406 55.497265,-21.128679,1419 55.498272,-21.128700,1481 55.499348,-21.127819,1591 55.500999,-21.127680,1713 55.502628,-21.126099,1924 55.505245,-21.127659,2129 55.504948,-21.126558,2144 55.506084,-21.126780,2177 55.512798,-21.132103,2147 55.514923,-21.134085,2123 55.515442,-21.134064,2119 55.516769,-21.134264,2094 55.517414,-21.134005,2083 55.518314,-21.133944,2060 55.519321,-21.134224,2032 55.520866,-21.134085,2015 55.520805,-21.134344,2020 55.521255,-21.134403,2020 55.521446,-21.134644,2027 55.522072,-21.134745,2022 55.522350,-21.134584,2018 55.522629,-21.134726,2014 55.523102,-21.134523,1993 55.523335,-21.134224,1979 55.523979,-21.134085,1970 55.525784,-21.134005,1935 55.527092,-21.133663,1903 55.528549,-21.133764,1890 55.530479,-21.134224,1841 55.531727,-21.134825,1834 55.531898,-21.135725,1897 55.532650,-21.135666,1861 55.533119,-21.135904,1875 55.533077,-21.136147,1891 55.533550,-21.136187,1893 55.534130,-21.136526,1917 55.534367,-21.136906,1937 55.534946,-21.137146,1944 55.535824,-21.137325,1934 55.536102,-21.137848,1928 55.537067,-21.137688,1946 55.537392,-21.137205,1946 55.537991,-21.137026,1943 55.538380,-21.137506,1946 55.538612,-21.137346,1942 55.539772,-21.138968,1916 55.539410,-21.139368,1906 55.539795,-21.140009,1884 55.539452,-21.140127,1880 55.540375,-21.142050,1874 55.540115,-21.142851,1848 55.540459,-21.143831,1830 55.540222,-21.144232,1810 55.541080,-21.144993,1815 55.541317,-21.145693,1811 55.542477,-21.147472,1775 55.543571,-21.148794,1752 55.543850,-21.149414,1750 55.543591,-21.149694,1752 55.544708,-21.150015,1737 55.545029,-21.150835,1729 55.545437,-21.150974,1721 55.545975,-21.151636,1714 55.547176,-21.151836,1710 55.547817,-21.152395,1705 55.549171,-21.152515,1686 55.550114,-21.153217,1694 55.554214,-21.153097,1681 55.556187,-21.152555,1678 55.557991,-21.151516,1657 55.558548,-21.153036,1646 55.559750,-21.153736,1646 55.560116,-21.155018,1643 55.561401,-21.155918,1640 55.562454,-21.156199,1634 55.563976,-21.157299,1622 55.565159,-21.157879,1628 55.565563,-21.158640,1619 55.566639,-21.159519,1613 55.568825,-21.160582,1595 55.570049,-21.160662,1596 55.571102,-21.161301,1597 55.576401,-21.166485,1586 55.575821,-21.169025,1589 55.580971,-21.175789,1606 55.579941,-21.177889,1600 55.580692,-21.178059,1599 55.581036,-21.177818,1604 55.581764,-21.177879,1601 55.582451,-21.178139,1606 55.582161,-21.178869,1614 55.583439,-21.179131,1617 55.583752,-21.178761,1628 55.584522,-21.178961,1627 55.585079,-21.178869,1632 55.585594,-21.178890,1631 55.585659,-21.178549,1628 55.586582,-21.177979,1632 55.587536,-21.178228,1633 55.588459,-21.180531,1647 55.588867,-21.180941,1661 55.592075,-21.181702,1670 55.592632,-21.182640,1669 55.592033,-21.183161,1663 55.591873,-21.184332,1677 55.591957,-21.185032,1682 55.591656,-21.185352,1674 55.591476,-21.186403,1674 55.592506,-21.186764,1688 55.592506,-21.187002,1691 55.593815,-21.187504,1703 55.593834,-21.188362,1707 55.598534,-21.191053,1726 55.598866,-21.191694,1721 55.600433,-21.192335,1741 55.601357,-21.192335,1751 55.602257,-21.192715,1747 55.602364,-21.192566,1748 55.603020,-21.192486,1754 55.603020,-21.193266,1762 55.605766,-21.193766,1795 55.607388,-21.192495,1818 55.611580,-21.193855,1861 55.616806,-21.194595,1942 55.617062,-21.194515,1945 55.617119,-21.194744,1946 55.618587,-21.194466,1971 55.618931,-21.194145,1972 55.620216,-21.193975,1992 55.620476,-21.193674,1990 55.621162,-21.193686,1997 55.622299,-21.194065,2014 55.622482,-21.193785,2018 55.626034,-21.193066,2052 55.627083,-21.193226,2053 55.628071,-21.192955,2061 55.628403,-21.192635,2065 55.629539,-21.192554,2069 55.630451,-21.192314,2093 55.630840,-21.191923,2102 55.631653,-21.192095,2111 55.633942,-21.190914,2137 55.635452,-21.191065,2149 55.636452,-21.191534,2146 55.638466,-21.191864,2132 55.639088,-21.192825,2136 55.640312,-21.193195,2156 55.641911,-21.194244,2176 55.642651,-21.194345,2195 55.643723,-21.195274,2219 55.643970,-21.195145,2224 55.644539,-21.195656,2234 55.646416,-21.199087,2281 55.647491,-21.199717,2296 55.647949,-21.201126,2321 55.648178,-21.201117,2321 55.650700,-21.202658,2352 55.651985,-21.204948,2346 55.652962,-21.207319,2352 55.653488,-21.209339,2376 55.654335,-21.210758,2367 55.654293,-21.211250,2379 55.654755,-21.212410,2376 55.654850,-21.213160,2380 55.655956,-21.214701,2373 55.656094,-21.216702,2356 55.655678,-21.216661,2372 55.655525,-21.217232,2361 55.656017,-21.217232,2340 55.656288,-21.217831,2307 55.655987,-21.218311,2298 55.655823,-21.219076,2299 55.656105,-21.219147,2279 55.656380,-21.218737,2275 55.656879,-21.219061,2258 55.662598,-21.220581,2261 55.663593,-21.220560,2263 55.664433,-21.220812,2270 55.669708,-21.224043,2292 55.671188,-21.224451,2315 55.671810,-21.224451,2325 55.672596,-21.224792,2326 55.674076,-21.224792,2331 55.674088,-21.224783,2331 55.674099,-21.225172,2322 55.673809,-21.225323,2322 55.673882,-21.226412,2318 55.674107,-21.227072,2318 55.673389,-21.229391,2324 55.672401,-21.231703,2329 55.673187,-21.232412,2327 55.673531,-21.233603,2333 55.674152,-21.234362,2331 55.675426,-21.238232,2343 55.675426,-21.238623,2343 55.676071,-21.240242,2351 55.676094,-21.245031,2323 55.676876,-21.246252,2315 55.677090,-21.247261,2309 55.677776,-21.247843,2302 55.678120,-21.248611,2300 55.678936,-21.249783,2302 55.679344,-21.252481,2285 55.680084,-21.255432,2283 55.680168,-21.257122,2273 55.681084,-21.260530,2228 55.681007,-21.262211,2255 55.682144,-21.264740,2255 55.682552,-21.265150,2253 55.683151,-21.266800,2254 55.685127,-21.269899,2241 55.685429,-21.271349,2227 55.683796,-21.274038,2225 55.683872,-21.275167,2219 55.682671,-21.276949,2205 55.682068,-21.279087,2189 55.682571,-21.280027,2184 55.682896,-21.282158,2165 55.682713,-21.283047,2165 55.682961,-21.283726,2156 55.682358,-21.284607,2142 55.682919,-21.285166,2141 55.683540,-21.286724,2136 55.686008,-21.288355,2118 55.682529,-21.298040,1832 55.681759,-21.303829,1604 55.681919,-21.306318,1508 55.680523,-21.311035,1467 55.682186,-21.311855,1414 55.682369,-21.312284,1392 55.682156,-21.312645,1382 55.683144,-21.313154,1345 55.685921,-21.316753,1261 55.689491,-21.318972,1105 55.689568,-21.321850,1156 55.690296,-21.324089,1069 55.690254,-21.324928,1076 55.690697,-21.325048,1040 55.691212,-21.326597,1051 55.693645,-21.328676,988 55.694759,-21.332254,936 55.695717,-21.333702,879 55.696232,-21.334072,858 55.695587,-21.336700,822 55.694473,-21.339869,721 55.694622,-21.341688,680 55.696671,-21.340609,567 55.697304,-21.339949,567 55.697990,-21.338301,612 55.699333,-21.338650,617 55.700436,-21.338490,612 55.701164,-21.339010,608 55.701317,-21.339708,609 55.701939,-21.339828,616 55.702187,-21.340288,611 55.703495,-21.338800,671 55.703484,-21.338449,676 55.706005,-21.339779,693 55.706703,-21.339628,702 55.707130,-21.339899,701 55.708698,-21.340059,715 55.708988,-21.339930,717 55.709007,-21.339209,748 55.710262,-21.338881,751 55.711872,-21.339001,748 55.712978,-21.339001,739 55.714275,-21.338120,751 55.715252,-21.338560,738 55.716251,-21.338530,728 55.717701,-21.338690,725 55.719566,-21.338020,734 55.720253,-21.337051,761 55.720844,-21.337002,750 55.721821,-21.336151,736 55.724792,-21.336302,760 55.729897,-21.336061,764 55.740597,-21.337412,687 55.740616,-21.337690,680 55.738438,-21.338699,654 55.738686,-21.338940,646 55.739456,-21.339088,632 55.738331,-21.339600,618 55.737644,-21.339600,622 55.736649,-21.339890,616 55.737194,-21.340208,609 55.737377,-21.340229,608 55.737450,-21.340469,599 55.738461,-21.340508,597 55.737751,-21.340849,588 55.737957,-21.341297,567 55.737537,-21.341469,568 55.736477,-21.341549,552 55.737141,-21.341688,556 55.738869,-21.342358,535 55.741272,-21.342367,519 55.741711,-21.344934,452 55.741001,-21.345354,442 55.740723,-21.345856,424 55.740948,-21.346016,419 55.740070,-21.346684,405 55.740059,-21.347355,386 55.739811,-21.347445,379 55.740059,-21.348103,364 55.740498,-21.348482,346 55.739952,-21.350252,295 55.740372,-21.352261,261 55.739952,-21.353128,253 55.740509,-21.353258,245 55.739811,-21.353548,244 55.739609,-21.353769,237 55.739674,-21.354078,230 55.739437,-21.355247,203 55.740189,-21.356487,183 55.740520,-21.356676,179 55.740082,-21.357086,166 55.740574,-21.358315,141 55.741508,-21.358746,131 55.743675,-21.358274,132 55.746033,-21.357956,140 55.746197,-21.358765,119 55.746666,-21.359665,97 55.746162,-21.360662,70 55.746368,-21.360752,62 55.746323,-21.361343,51 55.746548,-21.361881,39 55.746742,-21.361982,39 55.747311,-21.361652,40 55.747902,-21.366808,8";
        var arrTrace = trace.split(" ");
        var arrTraceCart = [];
       // var coordCart = 
        for(var i=0; i < arrTrace.length; ++i){
            var pos = arrTrace[i].split(",");
            arrTraceCart.push(this.ellipsoid.cartographicToCartesian(new GeoCoordinate(pos[0], pos[1], pos[2], UNIT.DEGREE)));
        }
        console.log(arrTraceCart);

        var geometry = new THREE.Geometry();//THREE.BufferGeometry();
        geometry.vertices = arrTraceCart;
        var material = new THREE.LineBasicMaterial({ color: 0xffff00, transparent : true, opacity: 0.9, depthTest: false, depthWrite: false}); //side:THREE.DoubleSide, , linewidth: 5,
        //geometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( positions ), 3 ) );
        geometry.computeBoundingSphere();
        this.trace = new THREE.Line( geometry, material );
        this.trace.frustumCulled = false;
        var o = new THREE.Object3D();
        o.add(this.trace);
        this.gfxEngine.add3DScene(o);
        this.renderScene3D();
    }
    
    this.trace.visible = this.traceOn;
    this.renderScene3D();
};


Scene.prototype.setHandPos = function(pos){
    
    this.browserScene.updateMaterialUniform("handPos", new THREE.Vector2(pos.x, pos.y));
    
};

Scene.prototype.setSunPosition = function(b){
    
    if(b === null )
        this.sunEffect = !this.sunEffect;
    else 
        this.sunEffect = b;

    this.browserScene.updateMaterialUniform("sunOn", this.sunEffect ? 1 : 0);
 
    //var sphere = new THREE.Mesh((new THREE.SphereGeometry(500, 8, 8)), new THREE.MeshBasicMaterial({depthWrite: false, depthTest: false}));
    //this.gfxEngine.add3DScene(sphere);
    // sphere.position.copy(new THREE.Vector3(3370386.310755235, -2285365.632290666, -4904477.750950122));
    // Reunion center: lon/lat 55.546875/-21.110765
    var posCartCenterIsland = this.ellipsoid.cartographicToCartesian(new GeoCoordinate(55.546875, -21.110765, 5000, UNIT.DEGREE));
 //   console.log(posCartCenterIsland);
 //   sphere.position.copy(posCartCenterIsland);
    this.browserScene.updateMaterialUniform("sunPosition", posCartCenterIsland);
    
    this.renderScene3D();
};

Scene.prototype.slide = function(b) {
    
    if(b === null )
        this.slideOn = !this.slideOn;
    else 
        this.slideOn = b;
    this.browserScene.updateMaterialUniform("slide", this.slideOn ? 1 : 0);
    this.renderScene3D();
};

Scene.prototype.setVolcanoOn = function(b) {
    
    if(this.volcanoMesh === null ){

        var textureLoader = new THREE.TextureLoader();

        var materialVolcano = new THREE.ShaderMaterial( {

            uniforms: { 
                tExplosion: { 
                  type: "t", 
                  value: textureLoader.load( 'data/textures/volcano/explosion.png' )
                },
               time: { 
                  type: "f", 
                  value: 0.0 
                }
            },

            vertexShader: volcanoVS,
            fragmentShader: volcanoFS,

            // depthTest: false,
            // depthWrite: false,

        } );


        this.volcanoMesh = new THREE.Mesh( 
                new THREE.IcosahedronGeometry( 1000, 4 ), 
                materialVolcano 
        );
        materialVolcano.uniforms.tExplosion.needsUpdate = true;
        var posCartCenterIsland = this.ellipsoid.cartographicToCartesian(new GeoCoordinate(  55.714073, -21.243862, 2224, UNIT.DEGREE)); //55.546875, -21.110765
        this.volcanoMesh.position.copy(posCartCenterIsland);
        this.volcanoMesh.scale.set(2,2,2);
        this.gfxEngine.add3DScene(this.volcanoMesh);
        this.setSmokeParticle(posCartCenterIsland);
        this.renderScene3D();
    }
    else
        this.volcanoMesh.visible = ! this.volcanoMesh.visible;

};


Scene.prototype.setSmokeParticle = function(p){
    
     var p = this.ellipsoid.cartographicToCartesian(new GeoCoordinate(  55.703516, -21.243862, 4224, UNIT.DEGREE)); // 55.714073, -21.243862
     var normalSmoke = p.clone().normalize();
     var dist = 10;
     var addedDist = normalSmoke.clone().multiplyScalar(dist);
     console.log(addedDist, addedDist.x + dist* Math.random());
     /*
        var camPos = this.gfxEngine.getCamera().position().clone();
        var vecDir = camPos.clone().sub(p.clone()).normalize();
        var pos = camPos.clone().sub(vecDir.multiplyScalar(dist));
        console.log(camPos, pos);
    */
    
    var uniforms = {
            time:      { value: 0.},
            color:     { value: new THREE.Color( 0xffffff ) },
            texture:   { value: new THREE.TextureLoader().load( "data/textures/particles/smoke3.png" ) }//perlin-512.png" ) }//smoke_PNG965.png" ) }
    };
    var shaderMaterial = new THREE.ShaderMaterial( {
            uniforms:       uniforms,
            vertexShader:   particleVS,
            fragmentShader: particleFS,
         //   blending:       THREE.AdditiveBlending,
       //     depthTest:      false,
            depthWrite:     false,
            transparent:    true
    });

    var particles = 10000;
    var radius = 5;
    var geometry = new THREE.BufferGeometry();
    var positions = new Float32Array( particles * 3 );
    var colors = new Float32Array( particles * 3 );
    var sizes = new Float32Array( particles );
    var maxD = new Float32Array( particles );
    var color = new THREE.Color();
    for ( var i = 0, i3 = 0; i < particles; i ++, i3 += 3 ) {
            positions[ i3 + 0 ] = Math.random()* radius;//( Math.random() * 2 - 1 ) * radius;
            positions[ i3 + 1 ] = Math.random()* radius;//( Math.random() * 2 - 1 ) * radius ;
            positions[ i3 + 2 ] = Math.random()* radius;//( Math.random() * 2 - 1 ) * radius;
            //color.setHSL( i / particles, 1.0, 0.5 );
            colors[ i3 + 0 ] = addedDist.x + dist* Math.random();//positions[ i3 + 0 ]  + addedDist;
            colors[ i3 + 1 ] = addedDist.y + dist* Math.random();//positions[ i3 + 1 ]  + addedDist;
            colors[ i3 + 2 ] = addedDist.z + dist* Math.random();//positions[ i3 + 2 ]  + addedDist;
            sizes[ i ] = 40000;
            maxD[ i ] = 4000 * Math.random();
    }
    geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );
    geometry.addAttribute( 'customColor', new THREE.BufferAttribute( colors, 3 ) );
    geometry.addAttribute( 'size', new THREE.BufferAttribute( sizes, 1 ) );
    geometry.addAttribute( 'maxDist', new THREE.BufferAttribute( maxD, 1 ) );
    
    this.particles = new THREE.Points( geometry, shaderMaterial );

    var p = this.ellipsoid.cartographicToCartesian(new GeoCoordinate(  55.69, -21.24, 4224, UNIT.DEGREE)); //55.546875, -21.110765
    this.particles.position.copy(p);
    this.gfxEngine.add3DScene(this.particles);   
    /*
    this.particles.frustumCulled = false;
    this.particles.geometry.computeBoundingSphere();
    this.particles.geometry.computeBoundingBox();
    this.particles.renderOrder = -15;
    this.gfxEngine.add3DScene(this.particles);     
    this.particles.renderOrder = -15;
    */
        
        // We need to bring particles close to camera for nice rendering
        // Compute position in front of cam in direction of volcano
 /*       var dist = 800;
        var camPos = this.gfxEngine.getCamera().position().clone();
        
        var vecDir = camPos.clone().sub(p.clone()).normalize();
        var pos = camPos.clone().sub(vecDir.multiplyScalar(dist));
        console.log(camPos, pos);
        this.particles.position.copy(pos);
   */     
                        
};

Scene.prototype.orbit = function(value) {

    //this.gfxEngine.controls = null;
    this.orbitOn = value;
};




export default function(coordinate, ellipsoid, viewerDiv, debugMode, gLDebug) {
    instanceScene = instanceScene || new Scene(coordinate, ellipsoid, viewerDiv, debugMode, gLDebug);
    return instanceScene;
}
